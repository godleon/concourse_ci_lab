resource_types:

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:

- name: git_osp
  type: git
  check_every: 30s
  source:
    uri: {{git-uri_osp}}
    branch: master
    private_key: {{git-private-key}}

- name: rally_test
  type: git
  check_every: 30s
  source:
    uri: {{git-uri_test-result}}
    branch: rally_test
    private_key: {{git-private-key}}
    
- name: github_page
  type: git
  check_every: 30s
  source:
    uri: {{git-uri_test-result}}
    branch: gh-pages
    private_key: {{git-private-key}}

- name: rally_result
  type: git
  check_every: 30s
  source:
    uri: {{git-uri_test-result}}
    branch: rally_result
    private_key: {{git-private-key}}

- name: git_semver
  type: semver
  source:
    driver: git
    initial_version: 0.0.1
    uri: {{git-uri_test-result}}
    branch: version
    file: version
    private_key: {{git-private-key}}

- name: slack
  type: slack-notification
  source:
    url: https://hooks.slack.com/services/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

jobs:

- name: rally_init
  plan:
  - aggregate:
    - get: git_osp
      trigger: true
    - get: rally_test
    - get: git_semver
      params: {bump: patch}
  - task: propagate_rally_tests
    params:
      CONCOURSE_CI_URL: {{CONCOURSE_CI_URL}}
      CONF_NAME: {{CONF_NAME}}
    file: git_osp/09.rally/build_tasks/propagate_rally_tests.yml
    on_success:
      put: slack
      params:
        
        channel: '#ci_message'
        icon_emoji: ':robot_face:'
        text: |
          Rally is running now, you can check the progress from the following summary link:
          https://github.com/godleon/osp_test_results/tree/rally_result/$(cat git_semver/version)

          The build had a result. Check it out at:
          $(cat git_semver/CONCOURSE_CI_URL)/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at: 
          $(cat git_semver/CONCOURSE_CI_URL)/builds/$BUILD_ID
  - put: rally_test
    params: {repository: propagated_tests}
  - put: git_semver
    params: {file: git_semver/version}        

- name: execute_test
  plan:
  - aggregate:
    - get: git_osp
    - get: rally_test
    - get: github_page
    - get: rally_result
      trigger: true
    - get: git_semver
      trigger: true
      passed: [rally_init]
  - task: run_test
    privileged: true
    params:
      OS_AUTH_URL: {{OS_AUTH_URL}}
      OS_USERNAME: {{OS_USERNAME}}
      OS_PASSWORD: {{OS_PASSWORD}}
      OS_TENANT_NAME: {{OS_TENANT_NAME}}
    file: git_osp/09.rally/build_tasks/run_test.yml
    on_failure:
      put: slack
      params:
        channel: '#ci_message'
        icon_emoji: ':robot_face:'
        text: |
          Rally test($(cat git_semver/version)) has failed, please check it out at:
          $(cat git_semver/CONCOURSE_CI_URL)/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at: 
          $(cat git_semver/CONCOURSE_CI_URL)/builds/$BUILD_ID
  - put: rally_test
    params: {repository: rally_remain_tests}
  - put: github_page
    params: {repository: rally_test_output}

- name: gen_result
  plan:
  - aggregate:
    - get: git_osp
    - get: rally_test
      trigger: true
      passed: [execute_test]
    - get: rally_result
    - get: git_semver
  - task: generate_testing_result
    file: git_osp/09.rally/build_tasks/generate_result.yml
    on_failure:
      put: slack
      params:
        channel: '#ci_message'
        icon_emoji: ':robot_face:'
        text: |
          Rally test($(cat git_semver/version)) has failed, please check it out at:
          $(cat git_semver/CONCOURSE_CI_URL)/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at: 
          $(cat git_semver/CONCOURSE_CI_URL)/builds/$BUILD_ID
  - put: rally_result
    params: {repository: rally_summary}